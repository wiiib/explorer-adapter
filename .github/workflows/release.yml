name: Release npm package

on:
  push:
    branches:
      - main

jobs:
  notify_start:
    name: Notify about start releasing
    runs-on: ubuntu-latest
    steps:
      - name: Send notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ðŸš€ Creating release for ${{ github.repository }}...

  check:
    name: Check if the new release is needed
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.bump.outputs.new_tag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check new version
        id: bump
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: true

      - name: Log new version
        if: ${{ steps.bump.outputs.new_tag }}
        run: echo "ðŸš€ New version ${{ steps.bump.outputs.new_tag }} is about to get published..."

      - name: Log skipping of new version
        if: ${{ !steps.bump.outputs.new_tag }}
        run: echo "ðŸŒš Release not needed."

  build:
    if: ${{ needs.check.outputs.tag }}
    name: Build and publish
    runs-on: ubuntu-latest
    needs:
      - check
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7.9.3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install deps
        run: |
          pnpm i --frozen-lockfile
        env:
          CI: true

      - name: Test
        run: |
          pnpm run test

      - name: Build artifacts
        run: |
          pnpm run build

      - name: Semantic release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  notify_failure:
    if: ${{ failure() }}
    name: Notify about workflow failed
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Notification about release failed
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ðŸš¨ Workflow failed!

  notify_end:
    if: ${{ success() || cancelled() }}
    name: Notify about releasing results
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Notification about publishing
        if: ${{ needs.check.outputs.tag }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            âœ¨ Release for ${{ github.repository }}@${{ needs.check.outputs.tag }} has been created!

      - name: Notification about skipping
        if: ${{ !needs.check.outputs.tag }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ðŸŒš Ended without a new release for ${{ github.repository }}
